# -*- coding: utf-8 -*-
"""파이썬 데이터분석(분양가격 예측).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f6l0f7-FloX00lwZsG8GdZFVPCB5TfBe
"""

import pandas as pd

df = pd.read_csv('https://bit.ly/ds-house-price')

df

# 열 이름 바꾸는 법
df = df.rename(columns={'분양가격(㎡)': '분양가격'})

df

df.info()

# '분양가격' 열의 데이터들 중 '  '(빈칸 두개)로 이루어진 행만 출력
df.loc[df['분양가격'] == '  ']

# 분양가격이 '  '인 것을 0으로 일괄 변경
df.loc[ df['분양가격'] == '  ', '분양가격'] = '0'

# Nan 값을 fillna() 함수를 이용해 0으로 채워 줌
df['분양가격'] = df['분양가격'].fillna('0')

# replace( ) 함수를 통해 ','를 ''(따옴표 사이에 아무것도 없음)로 바꾸어 줌으로써 제거

df['분양가격'] = df['분양가격'].str.replace(',', '')

#[],[[]]의 차이를 이해해야한다
df.iloc[[2125]]

df['분양가격'] = df['분양가격'].str.replace('-', '0')

#최종적인 정수화
df['분양가격'].astype(int)

df['분양가격'] = df['분양가격'].astype(int)

#분양가격 파트의 타입이봐뀐것을확인할수있다.
df.info()

#데이터시각화하기

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df

# '분양가격' 열에서 값이 0인 것들을 모두 출력
df.loc[ df['분양가격'] == 0]

# 0 데이터를 제거해주기위한 설정
# 분양가격이 0인 행의 index 모두 가져오기
idx = df.loc[ df['분양가격'] == 0].index

idx

# idx 행들을 drop, 행은 axis=0 (열은 axis=1)
df = df.drop(idx, axis=0)

# 제거잘되었는지 확인했고고 , 잘제거됨
df.count()

df['평당 분양가격'] = df['평당 분양가격']/3.3
df

# 그래프 출력 시 이상한 에러들 무시
import warnings
warnings.filterwarnings("ignore")


# 그래프 그릴 때 한글 깨짐 방지 설정
import os

# Mac OS의 경우와 그 외 OS의 경우로 나누어 설정

if os.name == 'posix':
    plt.rc("font", family="AppleGothic")

else:
    plt.rc("font", family="Malgun Gothic")


# 그래프 사이즈 설정
plt.figure(figsize=(12,8))

#먼저 지역별 분양가격 평균 가격을 그려보겠습니다. 
#별다른 처리 없이 '지역명'과 '분양가격'을 x, y축으로 설정하고 그려주면 자동으로 지역명이 같은 분양가들을 통합해서 그 평균 가격을 그려주는 것으로 보입니다.

# '지역명'으로 묶어서 '분양가격'의 평균을 나타냄
df.groupby('지역명')['평당 분양가격'].mean()

# seaborn 패키지로 막대 그래프 그리기
sns.barplot(x='지역명', y='평당 분양가격', data=df)

sns.barplot(x='연도', y='평당 분양가격', data=df)

# 기본적으로 평균값 출력

pd.pivot_table(df, index='지역명', columns='연도', values='평당 분양가격')

#aggfunc 에 들어갈수 있는 것.
## 1) np.sum - 합계 2) np.mean - 평균 3) np.median - 중위값 4) np.var - 분산 5) np.std - 표준편차 6) np.min - 최소값 7) np.max - 최대값

#aggfunc 옵션에 np.max를 입력하여 최대값 데이터를 출력

pd.pivot_table(df, index='지역명', columns='연도', values='평당 분양가격', aggfunc=np.max)

df.groupby('지역명').count()

df.groupby('지역명')['평당 분양가격'].median()

#Multi-index
df.groupby(['지역명','연도'])[['평당 분양가격']].mean()









